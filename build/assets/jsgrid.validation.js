//# sourceMappingURL=jsgrid.validation.js.map
(function(f,c,k){function g(a){this._init(a)}g.prototype={_init:function(a){c.extend(!0,this,a)},validate:function(a){var d=[];c.each(this._normalizeRules(a.rules),function(b,e){e.validator(a.value,a.item,e.param)||(b=c.isFunction(e.message)?e.message(a.value,a.item):e.message,d.push(b))});return d},_normalizeRules:function(a){c.isArray(a)||(a=[a]);return c.map(a,c.proxy(function(a){return this._normalizeRule(a)},this))},_normalizeRule:function(a){"string"===typeof a&&(a={validator:a});c.isFunction(a)&&
(a={validator:a});if(c.isPlainObject(a))a=c.extend({},a);else throw Error("wrong validation config specified");return c.isFunction(a.validator)?a:this._applyNamedValidator(a,a.validator)},_applyNamedValidator:function(a,d){delete a.validator;var b=h[d];if(!b)throw Error('unknown validator "'+d+'"');c.isFunction(b)&&(b={validator:b});return c.extend({},b,a)}};f.Validation=g;var h={required:{message:"Field is required",validator:function(a){return a!==k&&null!==a&&""!==a}},rangeLength:{message:"Field value length is out of the defined range",
validator:function(a,c,b){return a.length>=b[0]&&a.length<=b[1]}},minLength:{message:"Field value is too long",validator:function(a,c,b){return a.length>=b}},maxLength:{message:"Field value is too short",validator:function(a,c,b){return a.length<=b}},pattern:{message:"Field value is not matching the defined pattern",validator:function(a,c,b){"string"===typeof b&&(b=new RegExp("^(?:"+b+")$"));return b.test(a)}},range:{message:"Field value is out of the defined range",validator:function(a,c,b){return a>=
b[0]&&a<=b[1]}},min:{message:"Field value is too large",validator:function(a,c,b){return a>=b}},max:{message:"Field value is too small",validator:function(a,c,b){return a<=b}}};f.validators=h})(jsGrid,jQuery);